/*
 * buildAndtest.gradle
 * This build file was written by the application designer.
USAGE:	 
 	gradle -b buildAndtest.gradle build
*/

 
// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'eclipse'
//apply plugin: 'application'	//The Application plugin adds  to the project.

version = "1.0"
sourceCompatibility = "1.8"
sourceSets {
    main {
        java { srcDirs = ['src' ] 	}
    }
    test {
        java { srcDirs = ['test' ]   }
    }
}
repositories {
    mavenCentral()
}
dependencies {
    testCompile 'junit:junit:4.12'
	compile group: 'com.typesafe.akka', name: 'akka-actor_2.11', version: '2.4.8'
	compile group: 'com.typesafe.akka', name: 'akka-remote_2.11', version: '2.4.9-RC2'
}

jar {
    manifest {
        attributes "Class-Path": configurations.compile.collect { "lib/"+it.getName() }.join(' ')
        attributes 'Main-Class': 'aLabDemoIot.MainFirst'
    }
} 

test {
	testLogging {
		outputs.upToDateWhen { false }		
		showStandardStreams = true		
		events 'failed' , 'passed' //,  'started', 'skipped', 		
	}
	
 	include '**/Test*.class'
	test.afterSuite { TestDescriptor suite, TestResult result -> //add closure to be notified
	if( !suite.parent && result.getTestCount() > 0) { //there is at least one test
		long elapsedTestTime = result.getEndTime() - result.getStartTime()
 		System.out.println("""AFTERTEST Elapsed time for execution of ${result.getTestCount()} test(s):  $elapsedTestTime ms""");
	}
	}
}
 
apply plugin: 'jacoco'

test.finalizedBy jacocoTestReport

jacocoTestReport {
     reports {
        xml.enabled false
        csv.enabled false
        html.destination "${buildDir}/jacocoHtml"
    }
}
 