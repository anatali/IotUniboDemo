/*
================================================================================
build_bs18.gradle
USAGE:	 
	gradle -b build_bs18.gradle eclipse	//to set the dependency on the library
 	gradle -b build_bs18.gradle build   //creates the jar
 	gradle -b build_bs18.gradle build ledcoaponraspJar
================================================================================
*/
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'java-library-distribution'
apply plugin: 'jacoco'

/*
--------------------------------------------------------------
PROPERTIES
--------------------------------------------------------------
*/
version = "1.0"
sourceCompatibility = "1.8"
ext{
	mainClassName = "it.unibo.bls18.coapBasic.led.raspberry.MainLedCoapOnRaspberry"
}
/*
--------------------------------------------------------------
DIRS
--------------------------------------------------------------
*/
sourceSets {
	main {
		java {
			srcDirs = [ 'src', 'src-gen'  ]
		}
	}
	test {
		 java {
		   srcDirs = ['test']
		 }
	}
}
/*
--------------------------------------------------------------
DEPENDENCIES
--------------------------------------------------------------
*/
repositories {
      mavenCentral()
}
dependencies {
/*
BASIC SUPPORT (test, akka)
*/	
      testCompile 'junit:junit:4.12'
     // https://mvnrepository.com/artifact/com.typesafe.akka/akka-actor_2.11
	  compile group: 'com.typesafe.akka', name: 'akka-actor_2.11', version: '2.5.2'
	 // https://mvnrepository.com/artifact/com.typesafe.akka/akka-remote_2.11
	 //compile group: 'com.typesafe.akka', name: 'akka-remote_2.11', version: '2.5.1'	 
     
/*
UNIBO SUPPORTS
*/		
	  compile fileTree(dir: './libs', include: 'uniboInterfaces.jar')
	  compile fileTree(dir: './libs', include: 'unibonoawtsupports.jar')
	  compile fileTree(dir: './libs', include: 'uniboEnvBaseAwt.jar')
	  compile fileTree(dir: './libs', include: '2p301.jar')
	  compile fileTree(dir: './libs', include: 'qa18Akka.jar')
	  compile fileTree(dir: './libs', include: 'nanoHTTPD.jar')
	  //compile fileTree(dir: './libs', include: 'blsoo.jar')

/*
ADDED by the application designer for COAP
*/
// https://mvnrepository.com/artifact/org.eclipse.californium/californium-core
compile group: 'org.eclipse.californium', name: 'californium-core', version: '2.0.0-M12'

// https://mvnrepository.com/artifact/org.eclipse.californium/californium-proxy
compile group: 'org.eclipse.californium', name: 'californium-proxy', version: '2.0.0-M12'

/*
ADDED by the application designer for MONGO
*/
// https://mvnrepository.com/artifact/org.mongodb/mongo-java-driver
compile group: 'org.mongodb', name: 'mongo-java-driver', version: '3.8.2'



/*
ARDUINO (SERIAL)
*/
	// https://mvnrepository.com/artifact/org.scream3r/jssc
	compile group: 'org.scream3r', name: 'jssc', version: '2.8.0'

/*
HTTP
*/
// https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient
compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5'

/*
JSON
*/  
	  // https://mvnrepository.com/artifact/org.json/json
	  compile group: 'org.json', name: 'json', version: '20160810'
	  
/*
MQTT
*/
 	// https://mvnrepository.com/artifact/org.eclipse.paho/org.eclipse.paho.client.mqttv3
	compile group: 'org.eclipse.paho', name: 'org.eclipse.paho.client.mqttv3', version: '1.1.0'
}

/*
--------------------------------------------------------------
AFTER TEST
--------------------------------------------------------------
*/
test {
    afterTest { desc, result -> 
        println "Executing test ${desc.name} [${desc.className}] with result: ${result.resultType}"
    }
}
/*
---------------------------------------------------------------------
JAR:  
---------------------------------------------------------------------

 
jar {   
   	from( 'src' ){      } //  
 	manifest {
 		attributes "Class-Path": '.  ' + configurations.compile.collect { "lib/"+it.getName() }.join(' ') 
		attributes 'Main-Class': "it.unibo.bls.devices.raspberry.LedOnRaspberry"
	}
}
*/
 
jar {
   	from( 'src' ){  include '**/*.*'	   } //  
 	manifest {
 		attributes "Class-Path": '.  ' + configurations.compile.collect { "lib/"+it.getName() }.join(' ') 
		attributes 'Main-Class': "it.unibo.bls.devices.mqtt.LedSubscriberOnRasp"
	}
} 
 
 
 
task ledcoaponraspJar(type: Jar) {
    manifest {
        attributes 'Main-Class': 'it.unibo.bls18.coapBasic.Led.raspberry.MainLedCoapOnRaspberry'
    }
    baseName = 'LedCoapOnRasp'
    //from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    from { configurations.compile.collect { "lib/"+it.getName() }.join(' ') }
    with jar
}

/*

jar {
   	from( 'src' ){      }
 	manifest {
 		attributes "Class-Path": '.  ' + configurations.compile.collect { "lib/"+it.getName() }.join(' ')
		attributes 'Main-Class': "$mainClassName"
	}
}
*/

distributions {
    main{
        baseName = "LedOnRAsp"//"$mainClassName"
    }
}
/*
---------------------------------------------------------
PREPARE DISTRIBUTION
---------------------------------------------------------
*/
/*
---------------------------------------------------------
TESTING
---------------------------------------------------------
*/
test {
	testLogging {
		outputs.upToDateWhen { false }		
		showStandardStreams = true		
		events 'failed' , 'passed' //,  'started', 'skipped', 		
	}
	
 	include '**/Test*.class'
	test.afterSuite { TestDescriptor suite, TestResult result -> //add closure to be notified
	if( !suite.parent && result.getTestCount() > 0) { //there is at least one test
		long elapsedTestTime = result.getEndTime() - result.getStartTime()
 		System.out.println("""AFTERTEST Elapsed time for execution of ${result.getTestCount()} test(s):  $elapsedTestTime ms""");
	}
	}
}

test.finalizedBy jacocoTestReport

jacocoTestReport {
     reports {
        xml.enabled false
        csv.enabled false
        html.destination "${buildDir}/jacocoHtml"
    }
}
