System blsQactor  
Event usercmd      : usercmd(CMD)  				//from web gui              
Dispatch turn      : turn(X) 					// X = on/off         



Context ctxBlsQactor ip [ host="localhost"  port=8019 ]  -httpserver  
QActor buttonqa  context ctxBlsQactor -g blue{  
	Plan init normal[
		delay 1000;
		println("buttonqa EMITS");
		emit usercmd : usercmd("pressed");
		delay 1000;
		println("buttonqa EMITS");
		emit usercmd : usercmd("pressed")
	]
}  
QActor controlqa  context ctxBlsQactor -g yellow{  
	Plan init normal[  
		println("controlqa STARTS")
	]
	transition stopAfter 600000
	whenEvent usercmd -> pressedOdd	
	Plan pressedOdd [
		printCurrentEvent;
		forward ledqa -m turn : turn(on)
	] 
	transition stopAfter 600000
	whenEvent usercmd -> pressedEven	
	Plan pressedEven[
		forward ledqa -m turn : turn(off)		
	]
	switchTo init 
}    
QActor ledqa  context ctxBlsQactor -g green{  
	Plan init normal[
		println("ledqa STARTS")
	]
	transition stopAfter 600000
	whenMsg turn : turn(X) do println (turnTheLed(X) )
	finally repeatPlan
}  