System blsQactorMqtt  
Event usercmd      : usercmd(CMD)  				//from web gui              
Dispatch turn      : turn(X) 					// X = on/off         

pubSubServer  "tcp://localhost:1883"    		//for testing

Context ctxBlsQactorMqtt ip [ host="localhost"  port=8019 ]      

QActor buttonqamqtt  context ctxBlsQactorMqtt -pubsub{  
	Plan init normal[
		delay 1000;
		println("buttonqa EMITS");
		emit usercmd : usercmd("pressed");  
		delay 1000;
		println("buttonqa EMITS");
		emit usercmd : usercmd("pressed")
	]
}  
QActor controlqamqtt  context ctxBlsQactorMqtt -pubsub{  
	Plan init normal[  
		println("controlqa STARTS")
	]
	transition stopAfter 5000
	whenEvent usercmd -> pressedOdd
	
	Plan pressedOdd [
		forward ledqamqtt -m turn : turn(on)
	] 
	transition stopAfter 5000
	whenEvent usercmd -> pressedEven
	
	Plan pressedEven[
		forward ledqamqtt -m turn : turn(off)		
	]
	switchTo init 
}    
QActor ledqamqtt  context ctxBlsQactorMqtt -pubsub{  
	Plan init normal[
		println("ledqa STARTS")
	]
	transition stopAfter 5000
	whenMsg turn : turn(X) do println (turnTheLed(X) )
	finally repeatPlan
}  